{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Import Libraries "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd\n",
    "import statistics \n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from statistics import *\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Read the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/thiphan/opt/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py:3071: DtypeWarning: Columns (0,2,8,10,21,23,24,25,26,27,28,44,56,64,83,85,87,107,109,123,125,150,157,172,174,194,210,218,219,223,246,249,262,264,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,306,325,326,329,341,368,371,384,385,389,390,391,393,394) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time from Start to Finish (seconds)</th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q1_OTHER_TEXT</th>\n",
       "      <th>Q2</th>\n",
       "      <th>Q3</th>\n",
       "      <th>Q4</th>\n",
       "      <th>Q5</th>\n",
       "      <th>Q6</th>\n",
       "      <th>Q6_OTHER_TEXT</th>\n",
       "      <th>Q7</th>\n",
       "      <th>...</th>\n",
       "      <th>Q49_OTHER_TEXT</th>\n",
       "      <th>Q50_Part_1</th>\n",
       "      <th>Q50_Part_2</th>\n",
       "      <th>Q50_Part_3</th>\n",
       "      <th>Q50_Part_4</th>\n",
       "      <th>Q50_Part_5</th>\n",
       "      <th>Q50_Part_6</th>\n",
       "      <th>Q50_Part_7</th>\n",
       "      <th>Q50_Part_8</th>\n",
       "      <th>Q50_OTHER_TEXT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Duration (in seconds)</td>\n",
       "      <td>What is your gender? - Selected Choice</td>\n",
       "      <td>What is your gender? - Prefer to self-describe...</td>\n",
       "      <td>What is your age (# years)?</td>\n",
       "      <td>In which country do you currently reside?</td>\n",
       "      <td>What is the highest level of formal education ...</td>\n",
       "      <td>Which best describes your undergraduate major?...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>Select the title most similar to your current ...</td>\n",
       "      <td>In what industry is your current employer/cont...</td>\n",
       "      <td>...</td>\n",
       "      <td>What tools and methods do you use to make your...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "      <td>What barriers prevent you from making your wor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>710</td>\n",
       "      <td>Female</td>\n",
       "      <td>-1</td>\n",
       "      <td>45-49</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Other</td>\n",
       "      <td>Consultant</td>\n",
       "      <td>-1</td>\n",
       "      <td>Other</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>434</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>30-34</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Bachelor’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>Other</td>\n",
       "      <td>0</td>\n",
       "      <td>Manufacturing/Fabrication</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>718</td>\n",
       "      <td>Female</td>\n",
       "      <td>-1</td>\n",
       "      <td>30-34</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>-1</td>\n",
       "      <td>I am a student</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Too time-consuming</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>621</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>35-39</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Social sciences (anthropology, psychology, soc...</td>\n",
       "      <td>Not employed</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Requires too much technical knowledge</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not enough incentives to share my work</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23855</th>\n",
       "      <td>575</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>45-49</td>\n",
       "      <td>France</td>\n",
       "      <td>Doctoral degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Chief Officer</td>\n",
       "      <td>-1</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23856</th>\n",
       "      <td>131</td>\n",
       "      <td>Female</td>\n",
       "      <td>-1</td>\n",
       "      <td>25-29</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Engineering (non-computer focused)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23857</th>\n",
       "      <td>370</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>22-24</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Computer science (software engineering, etc.)</td>\n",
       "      <td>Software Engineer</td>\n",
       "      <td>-1</td>\n",
       "      <td>Computers/Technology</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23858</th>\n",
       "      <td>36</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>25-29</td>\n",
       "      <td>United Kingdom of Great Britain and Northern I...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23859</th>\n",
       "      <td>502</td>\n",
       "      <td>Male</td>\n",
       "      <td>-1</td>\n",
       "      <td>25-29</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Master’s degree</td>\n",
       "      <td>Mathematics or statistics</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>-1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>23860 rows × 395 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Time from Start to Finish (seconds)  \\\n",
       "0                   Duration (in seconds)   \n",
       "1                                     710   \n",
       "2                                     434   \n",
       "3                                     718   \n",
       "4                                     621   \n",
       "...                                   ...   \n",
       "23855                                 575   \n",
       "23856                                 131   \n",
       "23857                                 370   \n",
       "23858                                  36   \n",
       "23859                                 502   \n",
       "\n",
       "                                           Q1  \\\n",
       "0      What is your gender? - Selected Choice   \n",
       "1                                      Female   \n",
       "2                                        Male   \n",
       "3                                      Female   \n",
       "4                                        Male   \n",
       "...                                       ...   \n",
       "23855                                    Male   \n",
       "23856                                  Female   \n",
       "23857                                    Male   \n",
       "23858                                    Male   \n",
       "23859                                    Male   \n",
       "\n",
       "                                           Q1_OTHER_TEXT  \\\n",
       "0      What is your gender? - Prefer to self-describe...   \n",
       "1                                                     -1   \n",
       "2                                                     -1   \n",
       "3                                                     -1   \n",
       "4                                                     -1   \n",
       "...                                                  ...   \n",
       "23855                                                 -1   \n",
       "23856                                                 -1   \n",
       "23857                                                 -1   \n",
       "23858                                                 -1   \n",
       "23859                                                 -1   \n",
       "\n",
       "                                Q2  \\\n",
       "0      What is your age (# years)?   \n",
       "1                            45-49   \n",
       "2                            30-34   \n",
       "3                            30-34   \n",
       "4                            35-39   \n",
       "...                            ...   \n",
       "23855                        45-49   \n",
       "23856                        25-29   \n",
       "23857                        22-24   \n",
       "23858                        25-29   \n",
       "23859                        25-29   \n",
       "\n",
       "                                                      Q3  \\\n",
       "0              In which country do you currently reside?   \n",
       "1                               United States of America   \n",
       "2                                              Indonesia   \n",
       "3                               United States of America   \n",
       "4                               United States of America   \n",
       "...                                                  ...   \n",
       "23855                                             France   \n",
       "23856                                             Turkey   \n",
       "23857                                             Turkey   \n",
       "23858  United Kingdom of Great Britain and Northern I...   \n",
       "23859                                              Spain   \n",
       "\n",
       "                                                      Q4  \\\n",
       "0      What is the highest level of formal education ...   \n",
       "1                                        Doctoral degree   \n",
       "2                                      Bachelor’s degree   \n",
       "3                                        Master’s degree   \n",
       "4                                        Master’s degree   \n",
       "...                                                  ...   \n",
       "23855                                    Doctoral degree   \n",
       "23856                                    Master’s degree   \n",
       "23857                                    Master’s degree   \n",
       "23858                                                NaN   \n",
       "23859                                    Master’s degree   \n",
       "\n",
       "                                                      Q5  \\\n",
       "0      Which best describes your undergraduate major?...   \n",
       "1                                                  Other   \n",
       "2                     Engineering (non-computer focused)   \n",
       "3          Computer science (software engineering, etc.)   \n",
       "4      Social sciences (anthropology, psychology, soc...   \n",
       "...                                                  ...   \n",
       "23855      Computer science (software engineering, etc.)   \n",
       "23856                 Engineering (non-computer focused)   \n",
       "23857      Computer science (software engineering, etc.)   \n",
       "23858                                                NaN   \n",
       "23859                          Mathematics or statistics   \n",
       "\n",
       "                                                      Q6  \\\n",
       "0      Select the title most similar to your current ...   \n",
       "1                                             Consultant   \n",
       "2                                                  Other   \n",
       "3                                         Data Scientist   \n",
       "4                                           Not employed   \n",
       "...                                                  ...   \n",
       "23855                                      Chief Officer   \n",
       "23856                                                NaN   \n",
       "23857                                  Software Engineer   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                           Q6_OTHER_TEXT  \\\n",
       "0      Select the title most similar to your current ...   \n",
       "1                                                     -1   \n",
       "2                                                      0   \n",
       "3                                                     -1   \n",
       "4                                                     -1   \n",
       "...                                                  ...   \n",
       "23855                                                 -1   \n",
       "23856                                                 -1   \n",
       "23857                                                 -1   \n",
       "23858                                                 -1   \n",
       "23859                                                 -1   \n",
       "\n",
       "                                                      Q7  ...  \\\n",
       "0      In what industry is your current employer/cont...  ...   \n",
       "1                                                  Other  ...   \n",
       "2                              Manufacturing/Fabrication  ...   \n",
       "3                                         I am a student  ...   \n",
       "4                                                    NaN  ...   \n",
       "...                                                  ...  ...   \n",
       "23855                               Computers/Technology  ...   \n",
       "23856                                                NaN  ...   \n",
       "23857                               Computers/Technology  ...   \n",
       "23858                                                NaN  ...   \n",
       "23859                                                NaN  ...   \n",
       "\n",
       "                                          Q49_OTHER_TEXT  \\\n",
       "0      What tools and methods do you use to make your...   \n",
       "1                                                     -1   \n",
       "2                                                     -1   \n",
       "3                                                     -1   \n",
       "4                                                     -1   \n",
       "...                                                  ...   \n",
       "23855                                                 -1   \n",
       "23856                                                 -1   \n",
       "23857                                                 -1   \n",
       "23858                                                 -1   \n",
       "23859                                                 -1   \n",
       "\n",
       "                                              Q50_Part_1  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_2  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                     Too time-consuming   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_3  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                  Requires too much technical knowledge   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_4  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_5  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                 Not enough incentives to share my work   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_6  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_7  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                              Q50_Part_8  \\\n",
       "0      What barriers prevent you from making your wor...   \n",
       "1                                                    NaN   \n",
       "2                                                    NaN   \n",
       "3                                                    NaN   \n",
       "4                                                    NaN   \n",
       "...                                                  ...   \n",
       "23855                                                NaN   \n",
       "23856                                                NaN   \n",
       "23857                                                NaN   \n",
       "23858                                                NaN   \n",
       "23859                                                NaN   \n",
       "\n",
       "                                          Q50_OTHER_TEXT  \n",
       "0      What barriers prevent you from making your wor...  \n",
       "1                                                     -1  \n",
       "2                                                     -1  \n",
       "3                                                     -1  \n",
       "4                                                     -1  \n",
       "...                                                  ...  \n",
       "23855                                                 -1  \n",
       "23856                                                 -1  \n",
       "23857                                                 -1  \n",
       "23858                                                 -1  \n",
       "23859                                                 -1  \n",
       "\n",
       "[23860 rows x 395 columns]"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "multiplechoice = pd.read_csv('/Users/thiphan/Documents/UNT/FALL2020/INFO5502/ASSGN4/multipleChoiceResponses.csv')\n",
    "multiplechoice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23860"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of observations \n",
    "multiplechoice.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# analyzing and cleaning data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['What is your current yearly compensation (approximate $USD)?' nan\n",
      " '10-20,000' '0-10,000'\n",
      " 'I do not wish to disclose my approximate yearly compensation'\n",
      " '20-30,000' '125-150,000' '30-40,000' '50-60,000' '100-125,000'\n",
      " '90-100,000' '70-80,000' '80-90,000' '60-70,000' '400-500,000'\n",
      " '40-50,000' '150-200,000' '500,000+' '300-400,000' '200-250,000'\n",
      " '250-300,000']\n"
     ]
    }
   ],
   "source": [
    "# what are the unique value in column Q9\n",
    "\n",
    "print(multiplechoice['Q9'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15430"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# keep only numerical value\n",
    "\n",
    "multiplechoice = multiplechoice[(multiplechoice['Q9'].notnull()) \n",
    "                & (multiplechoice['Q9']!='I do not wish to disclose my approximate yearly compensation'\n",
    ")]\n",
    "multiplechoice.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['What is your current yearly compensation (approximate $USD)?'\n",
      " '10-20,000' '0-10,000' '20-30,000' '125-150,000' '30-40,000' '50-60,000'\n",
      " '100-125,000' '90-100,000' '70-80,000' '80-90,000' '60-70,000'\n",
      " '400-500,000' '40-50,000' '150-200,000' '500,000+' '300-400,000'\n",
      " '200-250,000' '250-300,000']\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Yearly Income')"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(multiplechoice['Q9'].unique())\n",
    "order = ['0-10,000', '10-20,000', '20-30,000', '30-40,000', '40-50,000', '50-60,000', '60-70,000', '70-80,000', '80-90,000', '90-100,000', '100-125,000', '125-150,000', '150-200,000', '200-250,000', '250-300,000', '300-400,000', '400-500,000', '500,000+']\n",
    "plt.figure(figsize = (15,10))\n",
    "sns.countplot(multiplechoice['Q9'], order = order)\n",
    "plt.xticks(rotation = -45)\n",
    "plt.xlabel(\"Yearly income (USD)\")\n",
    "plt.ylabel(\"Count\")\n",
    "plt.title(\"Yearly Income\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Q1</th>\n",
       "      <th>Q9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>10-20,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>0-10,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-10,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Male</td>\n",
       "      <td>10-20,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-10,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23844</th>\n",
       "      <td>Male</td>\n",
       "      <td>90-100,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23845</th>\n",
       "      <td>Male</td>\n",
       "      <td>0-10,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23854</th>\n",
       "      <td>Male</td>\n",
       "      <td>10-20,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23855</th>\n",
       "      <td>Male</td>\n",
       "      <td>250-300,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23857</th>\n",
       "      <td>Male</td>\n",
       "      <td>10-20,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15429 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Q1           Q9\n",
       "2        Male    10-20,000\n",
       "3      Female     0-10,000\n",
       "5        Male     0-10,000\n",
       "7        Male    10-20,000\n",
       "8        Male     0-10,000\n",
       "...       ...          ...\n",
       "23844    Male   90-100,000\n",
       "23845    Male     0-10,000\n",
       "23854    Male    10-20,000\n",
       "23855    Male  250-300,000\n",
       "23857    Male    10-20,000\n",
       "\n",
       "[15429 rows x 2 columns]"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# subset dataframe, only Q1 and Q9 column\n",
    "\n",
    "subset_income = multiplechoice[['Q1','Q9']][1:]\n",
    "subset_income"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pandas.core.groupby.generic.DataFrameGroupBy object at 0x7ff7824d5610>"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# group by salary column\n",
    "\n",
    "income = subset_income.groupby('Q9')\n",
    "income"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [],
   "source": [
    "# group data on income\n",
    "\n",
    "d1 = income.get_group('0-10,000')\n",
    "d2 = income.get_group('10-20,000')\n",
    "d3 = income.get_group('20-30,000')\n",
    "d4 = income.get_group('30-40,000')\n",
    "d5 = income.get_group('40-50,000')\n",
    "d6 = income.get_group('50-60,000')\n",
    "d7 = income.get_group('60-70,000')\n",
    "d8 = income.get_group('70-80,000')\n",
    "d9 = income.get_group('80-90,000')\n",
    "d10 = income.get_group('90-100,000')\n",
    "d11 = income.get_group('100-125,000')\n",
    "d12 = income.get_group('125-150,000')\n",
    "d13 = income.get_group('150-200,000')\n",
    "d14 = income.get_group('200-250,000')\n",
    "d15 = income.get_group('250-300,000')\n",
    "d16 = income.get_group('300-400,000')\n",
    "d17 = income.get_group('300-400,000')\n",
    "d18 = income.get_group('500,000+')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5        0-10,000\n",
      "8        0-10,000\n",
      "18       0-10,000\n",
      "26       0-10,000\n",
      "27       0-10,000\n",
      "           ...   \n",
      "20051    500,000+\n",
      "20875    500,000+\n",
      "21122    500,000+\n",
      "22264    500,000+\n",
      "23098    500,000+\n",
      "Name: Q9, Length: 12888, dtype: object\n",
      "3        0-10,000\n",
      "24       0-10,000\n",
      "102      0-10,000\n",
      "138      0-10,000\n",
      "171      0-10,000\n",
      "           ...   \n",
      "15825    500,000+\n",
      "18120    500,000+\n",
      "19506    500,000+\n",
      "22591    500,000+\n",
      "23627    500,000+\n",
      "Name: Q9, Length: 2384, dtype: object\n"
     ]
    }
   ],
   "source": [
    "# combine all income data to 1 dataframe\n",
    "\n",
    "data = pd.concat([d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18])\n",
    "income_data = data.groupby('Q1')['Q9']\n",
    "\n",
    "# group by male and female\n",
    "male = income_data.get_group('Male')\n",
    "print(male)\n",
    "female = income_data.get_group('Female')\n",
    "print(female)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Median income of male employees:  30-40,000\n"
     ]
    }
   ],
   "source": [
    "# treat index as column\n",
    "male_income = male.reset_index()\n",
    "male_income_data = male_income['Q9']\n",
    "male_median = int((len(male_income_data)+1)/2)\n",
    "median_income_male = male_income_data.iloc[male_median]\n",
    "print(\"Median income of male employees: \", median_income_male)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Median income of female employees:  20-30,000\n"
     ]
    }
   ],
   "source": [
    "female_income = female.reset_index()\n",
    "female_income_data = female_income['Q9']\n",
    "female_median = int((len(female_income_data)+1)/2)\n",
    "median_income_female = female_income_data.iloc[female_median]\n",
    "print(\"Median income of female employees: \", median_income_female)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram of income of female and male\n",
    "\n",
    "#matplotlib.use('TKAgg',warn=False, force=True)\n",
    "\n",
    "plt.figure(figsize=(15,10))\n",
    "plt.hist(male, bins=18, color = 'skyblue', edgecolor = 'black', label = 'Male')\n",
    "plt.hist(female, bins=18, color = 'pink', edgecolor = 'black', label = 'Female')\n",
    "plt.xticks(rotation = -45)\n",
    "plt.legend(loc = 'upper right')\n",
    "plt.xlabel('INCOME')\n",
    "plt.ylabel('COUNT')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 500 employess selected to make new dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Q1           Q9  salary\n",
      "1844   Male    30-40,000   35000\n",
      "5075   Male    10-20,000   15000\n",
      "7748   Male     0-10,000    5000\n",
      "12272  Male    40-50,000   45000\n",
      "6563   Male    30-40,000   35000\n",
      "...     ...          ...     ...\n",
      "7463   Male     0-10,000    5000\n",
      "4026   Male    30-40,000   35000\n",
      "2041   Male    20-30,000   25000\n",
      "14432  Male  100-125,000  112500\n",
      "10308  Male   90-100,000   95000\n",
      "\n",
      "[250 rows x 3 columns]\n",
      "           Q1           Q9  salary\n",
      "9370   Female    50-60,000   55000\n",
      "7632   Female     0-10,000    5000\n",
      "12374  Female   90-100,000   95000\n",
      "5243   Female   90-100,000   95000\n",
      "4111   Female  100-125,000  112500\n",
      "...       ...          ...     ...\n",
      "1291   Female     0-10,000    5000\n",
      "2162   Female    60-70,000   65000\n",
      "1513   Female     0-10,000    5000\n",
      "18798  Female    10-20,000   15000\n",
      "20664  Female    20-30,000   25000\n",
      "\n",
      "[250 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "male = subset_income[subset_income['Q1']== 'Male'].index\n",
    "male_sampling = np.random.choice(male,250,replace = False)\n",
    "male_value = subset_income.loc[male_sampling]\n",
    "\n",
    "female = subset_income[subset_income['Q1']== 'Female'].index\n",
    "female_sampling = np.random.choice(female,250,replace = False)\n",
    "female_value = subset_income.loc[female_sampling]\n",
    "\n",
    "print(male_value)\n",
    "print(female_value)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Draw the income histogram and display the median income for male and female "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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ezrcE4aGhuqqVav22PvRP0svWpqXn/PyfpcxpluvuzXLPras32UAAMxIa9eu3ePXZc0ko/3/lFJW11qHRnu+bo0AAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAX7nDAAAmBI33HBDhoeHp+z15syZk8WLFz/jc/bdd9+n/PD0F7/4xSxYsGDKahhpwYIFWbVqVZ7znOdMy+sLZwAAwJQYHh7O0NCoP+E1KeP5jeSDDjood99995S9Zz/p1ggAAAyU1atX55WvfGVOPPHEnHnmmXnooYeSJKeeemre+c535hWveEWOPfbY3HnnnTnvvPNy9NFH533ve9+O5c8999yceOKJWbhwYZYtWzbqe3zmM5/JySefnEWLFuUtb3lLtm3bttt1C2cAAMCM9eSTT2bRokVZtGhRXve612XLli1529velhUrVmT16tW58MILc8kll+x4/v77759bbrklb33rW3POOefkiiuuyJo1a3LllVdm06ZNSZJPfepTWb16dVatWpXLL798x/zt1q5dm8997nO57bbbcvfdd2fffffN8uXLd7stujUCAAAz1s7dGtesWZM1a9bkjDPOSJJs27Ythx9++I7Hzz777CTJi170oixcuHDHY89//vPz4IMPZu7cubn88stz7bXXJkkefPDBrFu3LnPnzt3xGitXrszq1atz0kknJekC4qGHHrrbbRHOAACAgVFrzcKFC3P77beP+vgBBxyQJNlnn3123N8+vXXr1tx88835yle+kttvvz2zZ8/Oqaeems2bNz/tPZYsWZIPfehDU1q7bo0AAMDAOOaYY7Jx48Yd4WzLli259957x7388PBwDj744MyePTvf+c538s1vfvNpzzn99NOzYsWKPPzww0mSRx55JPfff/9u1+7MGQAAMCXmzJkzrhEWJ/J6E7X//vtnxYoVefvb357h4eFs3bo173jHO7Jw4cJxLX/WWWflk5/8ZI4//vgcc8wxeelLX/q057zwhS/MZZddlle/+tX5yU9+kv322y9XXHFFnve850243pFKrXW3XmAihoaG6lT+sWjX0ouW5uXnvLzfZYzp1utuzbKPjT4CDwAAz2zt2rU59thj+11Gs0b7/ymlrK61jvp7A7o1AgAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAwIy17777ZtGiRTv+3XfffdP2XgsWLMgPf/jDaXt94QwAANgzli9PFixI9tmnu12+fLdf8qCDDsrdd9+949+CBQt2+zX7RTgDAACm3/LlydKlyf33J7V2t0uXTklA29nq1avzyle+MieeeGLOPPPMPPTQQ0mSU089Ne985zvzile8Iscee2zuvPPOnHfeeTn66KPzvve9b8fy5557bk488cQsXLgwy5YtG/U9PvOZz+Tkk0/OokWL8pa3vCXbtm3b7bqFMwAAYPpdcknyxBNPnffEE9383fDkk0/u6NL4ute9Llu2bMnb3va2rFixIqtXr86FF16YS0a8x/77759bbrklb33rW3POOefkiiuuyJo1a3LllVdm06ZNSZJPfepTWb16dVatWpXLL798x/zt1q5dm8997nO57bbbcvfdd2fffffN8ikImbN2+xUAAADG8sADE5s/Ttu7NW63Zs2arFmzJmeccUaSZNu2bTn88MN3PH722WcnSV70ohdl4cKFOx57/vOfnwcffDBz587N5ZdfnmuvvTZJ8uCDD2bdunWZO3fujtdYuXJlVq9enZNOOilJFxAPPfTQ3WpHIpwBAAB7whFHdF0ZR5s/hWqtWbhwYW6//fZRHz/ggAOSJPvss8+O+9unt27dmptvvjlf+cpXcvvtt2f27Nk59dRTs3nz5qe9x5IlS/KhD31oSmvXrREAAJh+H/xgMnv2U+fNnt3Nn0LHHHNMNm7cuCOcbdmyJffee++4lx8eHs7BBx+c2bNn5zvf+U6++c1vPu05p59+elasWJGHH344SfLII4/k/tGC5wQJZwAAwPS74IJk2bLkec9LSululy3r5k+h/fffPytWrMhv//Zv58UvfnEWLVqUb3zjG+Ne/qyzzsrWrVtz/PHH59JLL81LX/rSpz3nhS98YS677LK8+tWvzvHHH58zzjhjx6Aju6PUWnf7RcZraGiorlq1ao+9H/2z9KKlefk5L+93GWO69bpbs+xjo4/AAwDAM1u7dm2OPfbYfpfRrNH+f0opq2utQ6M9f9xnzkop+5ZS7iql3NCbPqSUclMpZV3v9uDdqhwAAGAvNpFujRclWTti+j1JVtZaj06ysjcNAADAJIwrnJVS5if5Z0n+eMTsc5Jc1bt/VZJzp7Y0AACAvcd4z5z9YZKLk/xkxLzDaq0PJUnvdvcH9gcAANhLjRnOSimLkzxca109mTcopSwtpawqpazauHHjZF4CAABg4I3nzNnLkpxdSrkvyWeTnFZK+UySDaWUw5Okd/vwaAvXWpfVWodqrUPz5s2borIBAAAGy5jhrNb6O7XW+bXWBUnOT/LntdY3Jrk+yZLe05YkuW7aqgQAABhFKSVvetObdkxv3bo18+bNy+LFi59xuZtvvnnM5+xpu/Mj1B9OckYpZV2SM3rTAAAAu7A8yYJ0MWRBb3r3POtZz8qaNWvy5JNPJkluuummPPe5z93t1+2HCYWzWuvNtdbFvfubaq2n11qP7t0+Mj0lAgAAM9/yJEuT3J+k9m6XZioC2mte85rceOONSZKrr746b3jDG3Y8dscdd+SUU07JCSeckFNOOSXf/e53n7b8448/ngsvvDAnnXRSTjjhhFx3XX86Be7OmTMAAIBxuiTJEzvNe6I3f/ecf/75+exnP5vNmzfnW9/6Vl7ykpfseOwFL3hBbrnlltx11135wAc+kPe+971PW/6DH/xgTjvttNx555356le/mne/+915/PHHd7uuiZq1x98RAADYCz0wwfnjd/zxx+e+++7L1Vdfnde+9rVPeWx4eDhLlizJunXrUkrJli1bnrb8l7/85Vx//fX5yEc+kiTZvHlzHnjggRx77LG7XdtECGcAAMAecES6royjzd99Z599dt71rnfl5ptvzqZNm3bMv/TSS/OqV70q1157be67776ceuqpT1u21povfOELOeaYY6aklsnSrREAANgDPphk9k7zZvfm774LL7ww73//+/OiF73oKfOHh4d3DBBy5ZVXjrrsmWeemY9//OOptSZJ7rrrrimpaaKEMwAAYA+4IMmyJM9LUnq3y3rzd9/8+fNz0UUXPW3+xRdfnN/5nd/Jy172smzbtm3UZS+99NJs2bIlxx9/fI477rhceumlU1LTRJXt6XBPGBoaqqtWrdpj70f/LL1oaV5+zsv7XcaYbr3u1iz72LJ+lwEAMCOtXbt2j1+XNZOM9v9TSlldax0a7fnOnAEAADRAOAMAAGiAcAYAAEzanrxMaiaZzP+LcAYAAEzKgQcemE2bNgloO6m1ZtOmTTnwwAMntJzfOQMAACZl/vz5Wb9+fTZu3NjvUppz4IEHZv78+RNaRjgDAAAmZb/99suRRx7Z7zIGhm6NAAAADRDOAAAAGiCcAQAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAAA0QzgAAABognAEAADRAOAMAAGiAcAYAANAA4QwAAKABwhkAAEADhDMAAIAGCGcAAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAAA0QzgAAABowq98FMH433HBDhoeH+13GuPzg+z/odwkAADCjCGczyPDwcIaGhvpdxrgs//zyfpcAAAAzim6NAAAADRDOAAAAGiCcAQAANEA4AwAAaIABQWaQu+65Kxsf39jvMsbl0R892u8SAABgRhHOZpDHnnwsc4+a2+8yxmXLti39LgEAAGYU3RoBAAAaMGY4K6UcWEq5o5Tyv0sp95ZS/n1v/iGllJtKKet6twdPf7kAAACDaTxnzn6c5LRa64uTLEpyVinlpUnek2RlrfXoJCt70wAAAEzCmOGsdv6uN7lf719Nck6Sq3rzr0py7rRUCAAAsBcY1zVnpZR9Syl3J3k4yU211r9Iclit9aEk6d0eOn1lAgAADLZxhbNa67Za66Ik85OcXEo5brxvUEpZWkpZVUpZtXHjzBgGHgAAYE+b0GiNtdYfJbk5yVlJNpRSDk+S3u3Du1hmWa11qNY6NG/evN0sFwAAYDCNZ7TGeaWUn+ndPyjJLyb5TpLrkyzpPW1Jkuumq0gAAIBBN54foT48yVWllH3ThbnP11pvKKXcnuTzpZQ3J3kgyeunsU4AAICBNmY4q7V+K8kJo8zflOT06SgKAABgbzOha84AAACYHsIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAAA0QzgAAABognAEAADRAOAMAAGiAcAYAANAA4QwAAKABwhkAAEADhDMAAIAGCGcAAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAAA0QzgAAABognAEAADRAOAMAAGiAcAYAANAA4QwAAKABwhkAAEADhDMAAIAGCGcAAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaMCY4ayU8nOllK+WUtaWUu4tpVzUm39IKeWmUsq63u3B018uAADAYBrPmbOtSX6r1npskpcm+XellBcmeU+SlbXWo5Os7E3PMMuTLEj337CgNw0wAyxfnixYkOyzT3e73OcXAMx0s8Z6Qq31oSQP9e7/bSllbZLnJjknyam9p12V5OYkvz0tVU6L5UmWJnmiN31/bzpJLuhLRQDjsnx5snRp8kTv8+v++7vpJLnA5xcAzFQTuuaslLIgyQlJ/iLJYb3gtj3AHTrVxU2vS/IPwWy7J3rzARp2ySX/EMy2e+KJbj4AMGONeeZsu1LKTyX5QpJ31FofK6WMd7ml6Z2SOuKIIyZT4zR5YILzGUTrv78+n1j+iX6XMabD5hyW8xaf1+8y6IMbbrghw8PDT535yCPJs5/99Cc/8kjfujfOmTMnixcv7st7A8CgGFc4K6Xsly6YLa+1XtObvaGUcnit9aFSyuFJHh5t2VrrsiTLkmRoaKhOQc1T5Ih0XRlHm8/eYvOWzZk/NL/fZYxp/ar1/S6BPhkeHs7Q0NBTZ774xcnDo3zkHnposvNz95BVq1b15X0BYJCMZ7TGkuRPkqyttX50xEPXJ1nSu78kyXVTX950+mCS2TvNm92bD9CwN70pOeCAp8474IBuPgAwY43nzNnLkrwpyT2llLt7896b5MNJPl9KeXO6voCvn54Sp8v2i+YvSVf+EemCmYvpgca98pXd7ac/nWzcmMyb1wWz7fMBgBlpPKM1fj3Jri4wO31qy9nTLogwBsxIr3ylMAYAA2ZCozUCAAAwPcY9WuMgG3U0tAb94Ps/6HcJAADANBHOsovR0Bq0/PP9GSIbAACYfro1AgAANEA4AwAAaIBwBgAA0ADhDAAAoAEGBGGvNrxpOF+/8ev9LmNMT2x4wk/y7aXuuueubHx8Y7/LGNNtf35bv0sYlzlz5mTx4sX9LgMARiWcsVcrKTlu0XH9LmNMt153a79LoE8ee/KxzD1qbr/LGNPjNz4+I0a9XbVqVb9LAIBd0q0RAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGmC0RpgB1n9/fT6x/BP9LmNMh805LOctPq/fZQAAzEjCGcwAm7dszvyh+f0uY0zrV63vdwkAADOWbo0AAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANGBWvwtowV333JWNj2/sdxljevRHj/a7BAAAYJoIZ0kee/KxzD1qbr/LGNOWbVv6XQIAADBNdGsEAABogHAGAADQAOEMAACgAcIZAABAAwwIAgDQkBtuuCHDw8P9LmNMc+bMyeLFi/tdBgwU4QwAoCHDw8MZGhrqdxljWrVqVb9LgIGjWyMAAEADhDMAAPSdGS4AACAASURBVIAGCGcAAAANEM4AAAAaYEAQAHbboz96NF/62pf6XcaYbvvz2/pdwrgZCQ9g7yOcAbDbtmzbkrlHze13GWN6/MbHZ8QoeImR8AD2Rro1AgAANEA4AwAAaIBwBgAA0ADhDAAAoAHCGQAAQAOM1ggzwPCm4Xz9xq/3u4wxPbHhieSCflcBg+GL//2L+dodX+t3GWM69JBDc9nvXtbvMgAGgnAGM0BJyXGLjut3GWO69bpb+10CDIzHn3w8Z59zdr/LGJPtHmDq6NYIAADQAOEMAACgAcIZAABAA4QzAACABhgQBIC9xqM/ejRf+tqX+l3GuDz6o0f7XQIMhBtuuCHDw8P9LmNMc+bMyeLFi/tdBn0mnAGw19iybUvmHjW332WMy5ZtW/pdAgyE4eHhDA0N9buMMa1atarfJdAA3RoBAAAaMGY4K6V8qpTycCllzYh5h5RSbiqlrOvdHjy9ZQIAAAy28Zw5uzLJWTvNe0+SlbXWo5Os7E0DAAAwSWOGs1rrLUke2Wn2OUmu6t2/Ksm5U1wXAADAXmWyA4IcVmt9KElqrQ+VUg7d1RNLKUuTLE2SI444YpJvBwAweTNlxL4kueeee2bEABbA1Jv20RprrcuSLEuSoaGhOt3vBwCws5kyYl+S3HHHHf0uAeiTyY7WuKGUcniS9G4fnrqSAAAA9j6TDWfXJ1nSu78kyXVTUw4AAMDeaTxD6V+d5PYkx5RS1pdS3pzkw0nOKKWsS3JGbxoAAIBJGvOas1rrG3bx0OlTXAsAAMBea7LdGgEAAJhC0z5aI0CLrrnhmmwY3tDvMsa0/vvr+10CALCHCGfAXmnD8IbMH5rf7zLGtPnzm/tdAgCwh+jWCAAA0ADhDAAAoAHCGQAAQAOEMwAAgAYYEATYK337W9/OfRvu63cZY/rbR/+23yXAQLjrnruy8fGN/S5jXB78/oP9LgHoE+EM2Cv9ePOPc/Kik/tdxphWXrOy3yXAQHjsyccy96i5/S5jXDbfaJRW2Fvp1ggAANAA4QwAAKABwhkAAEADhDMAAIAGCGcAAAANMFojAEBDHv3Ro/nS177U7zLGtP5763NBLuh3GTBQhDMAgIZs2bZlRgz7/+17v93vEmDg6NYIAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaIBwBgAA0ADhDAAAoAGz+l0AAABMl7vuuSsbH9/Y7zLGtP5763NBLuh3GfSZcAYAwMB67MnHMveouf0uY0zfvvfb/S6BBujWCAAA0ADhDAAAoAHCGQAAQAOEMwAAgAYIZwAAAA0QzgAAABognAEAADRAOAMAAGiAcAYAANAA4QwAAKABwhkAAEADhDMAAIAGCGcAAAANEM4AAAAaIJwBAAA0QDgDAABogHAGAADQAOEMAACgAcIZAABAA4QzAACABghnAAAADRDOAAAAGiCcAQAANEA4AwAAaMCsfhcAAMDMs/776/OJ5Z/odxljWv/99f0uYVzu+d/3ZOlFS/tdxrisW7suRx97dL/LGNOhhxyay373sn6XMSHCGQAAE7Z5y+bMH5rf7zLGtPnzm/tdwrhs2bolLz/n5f0uY1z+cvVfzohab73u1n6XMGG6NQIAADRgt8JZKeWsUsp3Syl/VUp5z1QVBQAAsLeZdDgrpeyb5Iokr0nywiRvKKW8cKoKAwAA2Jvszpmzk5P8Va31e7XWv0/y2STnTE1ZAAAAe5dSa53cgqX8UpKzaq3/pjf9piQvqbX+xk7PW5pk+9AzxyT57uTLnTbPSfLDfhcxRQalLYPSjkRbWjUobRmUdiTa0qpBacugtCPRlhYNSjsSbdkTnldrnTfaA7szWmMZZd7Tkl6tdVmSZbvxPtOulLKq1jrU7zqmwqC0ZVDakWhLqwalLYPSjkRbWjUobRmUdiTa0qJBaUeiLf22O90a1yf5uRHT85P8ze6VAwAAsHfanXB2Z5KjSylHllL2T3J+kuunpiwAAIC9y6S7NdZat5ZSfiPJ/0qyb5JP1VrvnbLK9qymu11O0KC0ZVDakWhLqwalLYPSjkRbWjUobRmUdiTa0qJBaUeiLX016QFBAAAAmDq79SPUAAAATA3hDAAAoAEDF85KKT839rPaV0r5+VLK+/tdB4NhUNanQWnHaErn6H7XwdOVUg7rdw27q7d+ndjvOiZjELf7UspoP0c0owzK8dZoSikz7vh4kPYhg9SWyZhxK98z6W1MHyilfKrfteyOXjsOTvLPSil/2u96pkIp5YRSyjt6g8jMODN5Rzoo69OgtGM0vfXreUl+r5Qy4y5e3lkp5edKKceVUl7V71p2VynlxUnuKaX8Sb9r2R21u8D87TNt2xm07b6U8tOllF9O8oellN/pdz2TNSjHW6MppZyV5D+VUi7pdy3jNUj7kEFqy2QNRDjbfuBca/1Jkl9L8lOllE/2t6rJ67VjbZIHs3s/FN53pZSfKaUsTTdazuwk55VS/rjPZU3G/klSSjmjlHJ+KeWD/S5ovAZlfdqpHfv3uZwp1Ttwvj/J25LMLaX8lz6XNCmllFmllDOSfDnJm5O8dyaHmlLK8Un+W5IPJNm/lPKJPpc0KSP2kUuSbJtJ+8cB3O7fmOS8JH+Z5OSZtk4N2vHWzkopC5N8Psm3k5w4U9o2KPuQZLDaMlkDEc56f8iUUl5da92a7sPvuaWUI/pb2cRs/9ArpcxN8v8l+fta65v6W9XklVJ+KsmSJCcnubjW+h+SvDbJPyqlHNrX4saplDK/lHJ+ks+UUi5PcmGSf57k35RSTulvdc9sUNanUdrx41rrBb15M2ob31kpZZ9e942SZP9a6yPpQs3hpZTn9Lm8yfjVJP8+ydW11nfWWs9IcuRMPGNeSjkoyR8kua/W+p97287Pl1L+RZ9Lm7D61GGZ/12Spa13Exxlu39yxHZ/VD9rm6zeNr00yZ/UWq9K8itJDplJ3WYH5XhrZ6WUA0opxyV5aZJra61/lORfJFnYcnfgZ9iHPLd3DDZjDOD+cNJm7LfoSVJK2a/WuqX3h5yb7gD6j5MsTJe6v9/XAieo1lp7H9JXpDuQ/pdJ0usatF+Sn6+1zqRv2V6d5J8m+Xit9bZSyn5JfiPJD2utD/e3tHH7tXQf0K9P8tfpgubbkvxGrfUb/SxsLIOyPu3UjpHB7GVJ3lJKeazWOuMO/pMd3z5v9+NSyqwk/2+SH9Raf9insiallPKKJB9J8sUk/7iU8vZa6+W11tNm0sF0KWWfWutPaq1P9kLlfy2lvLXW+sla66v7Xd94lVLKyFBWSnlJkpcleV2SP0p35qZZO233T27/YqmUckyS3yyl/KTW+ut9LXLi9kt3XHJrb/otSb5Ta93Qv5LGZ9COt0bqfe6+LckpSW5P18Pn/yR5dpJ7ktzXv+qe2S72IR9O8lCSWko5tdZ6c1+Km6BB2h/urhn7O2el6+/8i0luq7U+3pv3kiSXJPl0ksfSHUj/dJJZtdZ39qvWsZTuotpLklyc5BPp6v2V3mO/m+TMJH+ebsf6vVrrm/tV63iVUn4myR1J3ltrXdH7QH9Fkn+W5PZa67U7Hzy0qPfhsDLJqiR/luQ9ST6X5MYk/zbJoem2o2bWr0FZn0ZpRxkRME9Jdxb2x0nOSHeAs7RftU5Ub706P8lJvVlzkizo3f6PdNvOcemutdm3pfVrNKWU2enq/qNa6/JSypFJrkryqiRHJHlTum7NB8yAtpyS5C9rrZt70y9N8uZa66+VUp6Xri0HJ9mn1baM/GwtpZyU5BeSvDvJn6b7PLsj3cHos5L8VK31Hf2qdWfPtN33Hj8wXa+fK5NsqLW+rR91TkQpZX6Sv6u1/qiU8s50n8F/m2RDku+mO05pdlsfpOOt0ZRSXpBkRZK39L5IXpjuUoz/nOSgJEcmOSDJfq207Rn2Ic9O8o0kX0jy4nS9l+5qdT+fDN7+cCrM2G6NvYT9miRXj5j9i0n+V7oV84p031LdnK4ryh/u6RrHq9b6YLoPtY1JfjLiQPqydKd031hrfV+SxUmOKjNjhKT9k3y71rqiN/2adN0BN6f7m+zc1aY5pZRZvW4bi9OtWyuSfDLJ/0z3YXFwkq+ksfVrUNanndqxbUQwe06Ss9N9kP9+rfUV6boGvb5vxU5Qb716dbouTqvSHYR+MMnp6T67PppuG/pqGlu/duEnSf661rq8N/2Pknw93Q71y+kObG7JzGjLr6T7Ima7f57kb0opz08XbA7q3TbblhHB7EtJfivJ8Un+Za31knQ9AFYn+Zl0Zwme31I7nmG733692bZa6xPp2vWCUsrh/al0Qt6S7trF1Fr/IN2XY/8nyU8luTTdsViz2/ogHW/twqHpzs7c1pv+J+k+t76e5L1Jtqaxz69d7EN+L8mbel9YnJQuqH0gyZzS8MAtA7g/3G0zultjrfWdpZQ/KaVck+SJdB92+6Q7cP7PtdYPJUkpZUu6b6qas/0bzlrrvyylfC7dNwUppfx6uoOEl/V2Vkn3DfS6JI/2p9rxq7U+XEpJKeW/pztw+066b0Dfn/xDF4ne/ZOSnFpr/f3+Vfx0tdatpbvu5IR03TY2pPvQ/kS6MwT/IUlKKVvTyPo1yfVpuD/V7tpO7fh8eu1IklrrD0s3gtO16b5tu7LW+kullJ/tV70TMaJtv1pK+UGS02utn+49dnS6HdB/GbF+Nfv5tV2tdXMpZf/eOndDunD20nRnlz9Ua/2PSVvbyq7UWi/q7Ve+mOTJJP9/kr9LcluSj9VaP5zMjLakq/lP03ULfKSU8o+TfC1PbUcz69dO2/2f5anb/d/3breUUg5JsihdV7on+lPt+NVaLy2lfLqUckO6ULwy3VnL16e7HvuKpK2/xc4meLx1Vv8qnbha6y2llI29de7edGHsZ9N9ifEHI9r292ng7zPGPqSU7vq/VyX521rrZUm+WEr5D6WUhbXWe/tZ+84muT+cUevXZMzYM2e90+zpnaq9Pt2H3e3pLk79/e0bU88p6R2A9rrXNaPWWke05VeS3Ng7pb4oya+POJBOulDwSK317/pQ6rht/z+utZ6bbtSja9NdWD+/lPLR3mPbg9m+SfZNcm4p5dP9qXjXaq1PpgtkN6U70/S6JH+4/YOip5n1a4Lr07IkD9VaH0uSUsq8PV7wLuzUjl9O8rlSyq+WbnCA1Fq/l25gg9eUUg7uzfubJCmNDzazU9suTrJvKeV9pesKvCzdNZpNrl+jGbG9vyndWZmjkhyW7tvoi7cHs57W2zJyv3JNurPktyX5pSQf3h5oeppty4i/yWW11u/3gtkh6davP2y1HTttG69PsryUcnEpZUkp5aJSysdLKX+Qbr9ybrruWsOllANLKb/az9p3ZUR73pRusJzfTrc/fHFGBLOeZv4WI03weOsXkvyozJDfCRuxrbwhyd3pvpAZTtdN8/daPJYcZR+yfynlN0cEnQeS/Oskzyu9AYxqre9N90VTUyaxP5xR69ek1Vpn7L90ff5HTh+Z7hTogen6pSbJ29NdzPn8ftc73rakuzbjvyd5bm9633Sn11eMeE7pd80T+dv05s1Kdx3KGTvNL+mC51fS9Vfve/27aNP8JH+crltT0+vXONanbyb5VG/61Un+pPecZf2u/Rna8f4knx0x/QtJPtO7/6wk56Qb6KC5doyjbUcl+cdJ/mu67htNr1/P1Jbe9NFJ/tNM2FbG0ZYZu1/ZqR0/P1PWr522jU+l633xjiS/nu5s0yuTPG/Ecz7Ze84n+137ONepBb3PqgNa/1s8QxtG2y7eme4Lmu37mqOTvLTftU+ibT+f5A9b//zaaTs5qbePPGjEvN9M8u4R06X3N/mn/a59jLbsan84I9evyfyb0cmzPnVkl6T7Q/2T2l3IXUp34e17kyyutX6v5aQ9si2160+/Kckf99rwpXQDHvxS0vW9r701szf9j/Z0vWPZ+W/T68a4Ncm/yohRwkp3cfcn0n3Qn127roT77slan8lO3469MMnC2p1N2+X61cI3nmOsT/8jyd211gtLKRenu5ZgXZIL0vXnvqgfNY+m1vqTEd9sfiDJk6WU60op/zbdt9DfKd3FxBenC2t/nQbbMZqd2vZXSZ6b5MW1677V9Pq1s5Ft6TkyXRfa5reVnQ3SfmUnRyY5fqz1qwU7bRsXphuY4dha6ydqrX9Wa/1arfX+0nWl/Uy6a9QOTPebWx/rY+mj2sU6dVyt9cdp/G+x3Ti2i99M8q503enmlVI+kO7azX9fuq6QzRqlbUelO+h/xs+vfttpO7kzyXPSdWPe7oj0esiVUhanC29/lu7HnZv6m4xjfzhj16/JmLGjNe5KKeWqdIn7fyc5Jt0oW9/rPbZvrXVbP+sby/bT0r37lyZ5IMkTtdY/K6UsrrXe0Htsn97K/LPpRuGaVRsftWpk23rTz07yH9N9S/W6Xoho2ljrV7oBOGrv/lCt9S/6V+2Y69Pb0u2EvpjkG7XWH5dSfitdT4OP9q/qp9u+vvfuX5xupLN9aq1X9ELYkUmuS+PtGMt4P796Bwen1Vq/0rdixzCBtsxKckHtfvepSePY7usoB3jNGUc7UmvdtvNndb/stN3/13SDgfzbEY8fma4XwEdq75rlUsq70/UK2NSPmsdrAttHSfezJ3/Vt2J3YUQbvtW7XZLuetNfT/IX6UZ3vKeUclO6kZvv7FuxEzSObaX0vkzu+7ay037+j5I8P92+/oXpLsdYlOSX0w228Y2Z8jcZ5PVrLAMTznb6ED8zyfeSPJLk8HQH/v9P77GdA0JzgW1kW3aaf226oc9/a8S8g9J1W/tkkodrrf9uz1U6caWUF6Ybkee3kvx+utHczt0ezEp3Ju0t6do0p9b6nn7VOtJ416/e47PSnSH8V0m+W/s8hO1o61MpZU6636S6JsmXewdkL083KtJv9DtUjmYX7fjpdN3nZkw7RjOBz6/tX8rMTtfuWbXWX+tX3aOZyLYyYpmrk/yoNva7VRPc7vdL9yXBUen2rTf2oeRRTbAdByb5L+mGR59V+/wbgjvV/gu11q+XUn6m/t/2zjvcrqrow+8kxEBCCTUYCKFLKCqiQeCjKE26oQYIRUqQIggCH1VFiaAioFRRigKhSZduKIIFEUV6E/FLQAQEFAICib/vj1k7d9/NOfeeG+HutXbW+zznSfY+mzBzZtbaq82M9Fq4twRwKXCcpFvqlLUT+jpWMc8SuhuwlKQo4up60GEgnh3wXuBmSX8L7eJeYD9Jv61L5k7pY1sZClwETMEXC2trKxW5N8Bj46biyU2+gSduScImTfavTolia/b9IAxYiqDCWyQ9FVbOngTGmNlJ4VEDd17zqu9fNw8wjoYWA9DCTtsDi5jZ8tZ19G960HMvvJL9cv0oap+R9CiwMN7QRkvaqDQxG4oH3xdFLVc2szPa/mP9SKf+FeyyBz5IOxtY0GpOYdtmRX9zYISkm8KEZnV8Mnm+pHstkmMbZdrosQWJ6dGKTv2r+A0kvRkmMsMssmNcfeiLq8H4w8zstFqEbkMHupwKMyc0P8Frh+0K7G9mk+qSu0qnegQ2x2M4fwx8OKzE14a6H3e6J7zjjih9/394copBNYnYJ/rQ1hX+fAaPxx5vZtvXJXeZHnTYGBBwRxg4DwZOAH6XysC5D+/6wfh45SV8oWzROseSlXbyC0n3SfobXZkNk7FJk/2rU5IYuHRKq0mN/LzqWOBpMxsNXGBm38TrPS2Fv0w3DivRURIcdZCkdyXtIulJhd0+eVrhOfF071OA12oVtgdKHcfOeBHnwaXvhgD34Y1sgqRJ+ArJnHXI2ooe/GtrurIgLYbXfxkt6SJ5xso3zOyT/Sttryh8MLMt8WD7h/H4xnYToRhpih6d+hdm9gkzGxsuTwKGFG0rFnrpi58s3Ssf3bgC2N7Mypm5aqcHXbYBfht2yi/GV9avkTRO0qb+qO3e7wK3oQc9tgfuMLNBQd6VgX9Kehg/5TDMPHNabZT9RNJTwGJmdimAmX0OH7S9HK6jagut6LB9DAx/jsITOxyLT9KioIUOc+DxQLdJejYMnI/EJ80/Cs8kMebsxT5PhNsj8VwAEyT9FR+v1BovX+lPk7ZJk/2rExpzrLEd1v3s9qnA1pKWCNffx4+gjJcUfe0wADNbBw9+Ho53DsKz9LyEF4E9Pjw3r0KK9JiobFd/GS9i+RQ+MHtepWOZ5kkfRuENUNWOJwasVK+tdG8EHsf1PUmXhXtDFFlMnZldi/vPynh658fkO5tYVwHu4tk1JP2mHkl7plM9zEsKrCLp0tqE7SPmyX/eqdxbAK/9cj9ef+tDwMHy4PVosRZHyIMuy+M7IUNwvSZL+l0NInZMoUsYDByPl9v4FZ5q+1ZJpwTdhkiaWqesPVHSYy7cnybjx5+Oxfvm5/GJz7aSXq5PUsesW2zN+XgdtE/hcdc3SSrSnHfztZj7r4JqnxvujcITZt0LnBGDDXrCzCbiC8UH42ELT+PvwrtjfH/3heq73sxWxrMcj8VroO6E92XHVe1YJ32xSSsfjIk+6jKnPFlNkjR+clYmvIBuxIMihwCrANtIeil8vzB+ROpP9UnZM2Z2Ll6/4jv4wOxFPDnCPZKmhGNdn8cDWKdKOrA2YdtQnqCF6+HAt4CvqCuOYEv8WOB2kn5Vj6SdEVY498OP0r0R7u0NLCHp2NJziwAfrtu/KhPk4YSjsWa2I7CCpK+VnjV8R2AS8Hd57bQo6KMeg/HsYicCz0napxahZ4HgX4cBPy4GZ8G/1sQLPv9J0tOx+FcnmMc8Lo/HBj6Bx0V8RdK08P2iwKKSHqhPyt4JO/7HAT+VB6YvhU/WdldXLcfo7WJmWwG7qCsj8PrAQXi7f1TSg7HoUWn3I/CFu7+Z2ThgRUlfLT0bbf/VDjNbUdKj5vUbJ+EJT7pNzGIbq1QmzWeG29Pw9r1IIWdhu+qfNYndZ4I/bYgnophmZofiCSpWCZ/NJP0xBvvMgk0GAmsBmyqSWP+CWdBlIWB9fDH2mFqE/i+ZbSZn5RVoM/srMI+kBcL1WsAawA54LNS/5AUwo8T8XPOQ6gDTPGvdsvhk7Vy8RsSdxW5arIQJ5amS1gjXY3H5x0u6sWiY5QYaG2b2A7yTGBeujwbmlnRk8K9PA+OIxL9a/ZbmgbX3ABdL+kHp/lz46uARwJck3dWvwvZAX/Qoff9z4C6F7G4pEF5I88tjszCzA4G3Jf3QzD6BH6XdHi+ZULt/9YSZjcETAi2G16S7UF0FxP+HrraSgi4rAN/HU2y/a2Y74JPMMTG2+3aEydmBktYP118A1paX21gVH5BG419t2v0cwK/x2odJ9F+tCAP+HYAXgLvxif8L4bs18UWZ6MYqlUlz+e/fwfuuvUvPFu/0+fH35hOt/9X4CO/2tSRtGnbOD8FP92yIn2DakUjaSi82ma/FGNLwBb+psS1g9kUX81CfhfHERi8osqRZndCY85m9UZqYTcILCT5qZqPM7LN4JqT/4MX6NgYWCPejwroCJA8GBlgpUNvM9sd3Bm4Bvi3pz3hAd/Q2lmfUe8rM7gmTnCOAHcPEbABQxKoVKyfz1ydtd0JnRtihfMPMfmFmp+MvzwvDwGY3/NhdNP7VYmAzMKz0rwlMLnwt7DhtAKyGZ6W6p79l7Yke9FgL12NQYaMweAO4Ei+IHj0l/9oPmGZmt4U2si9wp5l9CvgivvN0aCz+1RPyI4s/BPaX9O3SxOyzeDKN/5COLo/j75OfmR/D/g5wlJl9BE9ME1W7b4eka4FnzOwmMzsKn3CeY2ar4L4WlX+1affT8UXWZPqvVkg6CY87Ww0vql1MzNbDfSrKsYq6J6Qo74YdDQw3s9Fm9tHgU98ys//F++I/hQlpEkiaCLxqZjfjPrUOsBGe3fTrwAwiaSu92GSEeZgM4LuxcjYL332OiOiLLpL+LWmKpC2AkeYZnJMiiQHK+8zDeE0dmdlIfEXtIeAGhRoW+GQgut+mfAxA0t5mtgWAmc2NHxEq4jXeMk9+cjBeRyxaSvrsap6J6gl8F62wxQB5LZEF8WMDh+OFiKcpgrTCwY8KHfYKu36v4Cs2z+AJG6L3L3ncyRzht3406DUUD8DdCK+ZcrK64jeHKhxBiwl1JcqZDjwSBmdzm9k0YJXQ5n+AJwSKnhb+tQ3wKnAOntE0Cf8qKFbMJd1eub8Mfhz7QeDGxHTZxzx+dm48U+sf8eQADwE/j12XyjtlX+AtPM7s9/gkLXr/moX+6z2xwjFQssXO5uUlJgJfMs9QuTWt20c0WSrbLZaFndmN8KyGZ+JxjYa3mT+ET/RU7PMxPCZzeviciNdEi6rNt7DJHMH3tzAvRVOcNjnYzN6Un7QaRkTJ2Apa6DIo+Nfnab8RMR8w1wcu3PtMVB3sB0npRVrOBLYCbrTJ6ioueAzwD0m31iFnbxSrB0GX68PtdfBVtiPCxGx54EDgauC6umTthMqE8/Lifthxelt+9n44flRgFF5A8Xgzu9XMJkg6py7ZCyo6XF3cN6/PMRfwixT8S12BwBuaF3UcA2yC7wycrK4ECEOB48xssCKtq2d+pGwiMA9+zPdtYH58QrOHvAj3fPixs8GSom0nFf+6srifmn9By5drcTxtadLri8sT55mp6MOK85wkYpeKf51V3E9Qj177L5i5mPlTM3tO0pdqEbYNFVvsaB7DCLAk720fxwKvKuLabqXFMpnZZOBvwEqSzjSzw/GJ5e3VxZpYqYy/ZsaTmdlGeFu5Lfa2oq4EWSPwCc2/wgTnx8D95olOBki6pk45O6G0wLIInrV4Lrzw9jRgcTyj7puFDcxsdSVS+zT6I2/vF9VBQWBz4AF1ZXY7GDfoaeE6yt+nhS4fwhvYW+a1244BngOuLzXEKHWB7lvUZraSebzDOcDqQe6t8MyUd6grfu5PeNbKKJBaBjVvCvxRPA9uogAAEi9JREFU0mOQjn/hyU2ewHcyHgV+ECZmFvR8B88gNjx06NEhTyLzZ+DfeNKfjYF1JW0XJmafAu7EYwMOM7ML65O2dxrmXzMp9WWb44lNktKljV02IbH3Sg96pOhfLfsvmDkxK3adl7VI6miWUffjW38Jv3O1fRyCJzop6uwdZmZHmtmJdcndE2EHbbqkDYFVzew3+I7GTZJuDM8cGrMOBW3GkpuRXltZDd/tA2bW05sMHCVpLYjfr0psjmf9PhwfL24FLIgXqi7iaA8CrjCzs9r+KxERo8P0Jy8Bm5jZguZZEFfEd5ruC99HmXyiSljhmG6e6OBn+HGUSZIegZnb2EXw5BJmtmJ90vbKC/ixwKMlnY+vFq4P3FvsbpjZBsBoPIVqzCTpX/LabPfgx3/PkPR28CGFQcMMeVHIbYFR5inqo6E0sNkTTw9+Trh+K3y/Ph4bcLGkPSWtDSxuZh+vR+JZJkn/akPWJT6S1KNN/2VhgHwcMFLSwZI2AZYLg7aoKE8Awru7bIvz8Pffz4EXzezbeNKZ+4HVzOzkOmTuicrk+CZgGTwRyF1mNty8rFHUOvRCcm1FfvJqupldYmYLmNk5wDuSnjGzEcEmO5CATST9CM+xYJJ2ltee+5akk2FmAq3PAOOBhc3LcETNbJOtsR3BSMJT6x8GvBg683I2mDH4LHykIjhGV6Yi55LAQHkykOL7cp2nSfgxgkWBZyXt0v8S907pqBNmNgHYSF0pntfGV0leknSSma2Bn4+OzjaQnn9V5LoCn8C0nASb2S7Azni5g9f7UcxeqejxY+ASSZPN6wb9BLisOMJlZuvi8ZnjFUohpEJq/tUTWZf4SE2PVv0XcF3p3sr4Ys2lChkdzWye2PqvVlRscQh+guEQ/Lj/PpLeMM98fDjel0VX99A8NugzwG345sCv8Zp6CwD7pqBDO1JqK5Ux1pl47N9CwAH4AvkJJGKTyu/7Q/y33bT0/Qi8JMUjCmEY5gXsT1AkpShaMdtOzioGnVmszsyGKdTaCtc740k1fogHtD6uyNJylhtauJ4H7/DOlFdSnwu4AJ/EbCXp32Z2B3CWSnFeMWJmO+H1dzYxs13xAoT/AM7HYwpOI0LbpOxfZdnD9bJ49sPBeAc+Ei+CLjw4/Vzz2IjRxRGVGGihxwA8dftDCnVczOMZd8VLa3w13IsyWUCZlP2rStYlPl1S1qNFu18QeFfSv8L1UsApeFr9KaXnomz3FVvMlNHMTsJ30HaS9E/zLMZ74RtvJ9Uncc+Y2cfUVZfqW8DH8OzM/yrpYJK+U6ecnZJqW+lB7u/iO3/J2KQy2dwfrwn6dun7UcDlwGmSLqpJzL4habb9ECanpevD8K3R+cP17sBjeL0X8CN2vwSWrlv2HnRaFLgdz4g0PNy7FvhZ6Zn58Mnax+uWt0OdrsIH1Q/gMUJDgW2DbdaJ1TYp+1dZduB0PH3zqXja9v3xBC0Lhu+H4ztPU4Dz6pa9B50GhN9/vnC9JHAofjx2IWA94KvAFcD365a3yf6VdYlfl5T1qPRfRwO3lq43De+TOcL1lvhiZrTtvoUtRuPFqRcq/fbr4jsEm9Ytb4c6rBh0WLiiw+V4SYRB+ILyanXLPgu6JdFW+uBX0dsET2JSvh6PL7oW17vipU4GlXSLUhdJs0+2xlYoWAjAzPYCtgCOlPSqeerXE/AjW/eYpxpdDQ8wnlqLwJ1zrqSLAczsK/hgdL3S96viyTRerUG2jilWdiRtbWaL45mP3jKzzfAds+0l3R2rbVL2r7Lskg4wT0W/iKSzy8+Z2WLAF/CsiDsB+5nZWZL27VeBO0AeaD8XXn/u1/hCxiLA3nhc40HAeXitwG+Y2YkKO2wxkrJ/Vcm6xKdLynpU+q+JZrakmV2OH6NbDPiDPO3+gfiC3wXArUTa7sv6BP4DvC7pZTNbGH+nTwDuUVeCjfcU6q6TFrLMwHV4qaTDfsBlwCN4GYcheFzgk5K+0K8C94FU20oPNnk5NZvovUmNNsQTg2wXdv+WB16TZ6YciS/IDAKWj00XmI2PNVYJx5tel/SmeX2Ui4ELFOJtwqDuDOAvkr4Z7i0k6eXahO4A83S1j0m63rwI7xg8096x+A7bWsDawDRJJ9QnaWtaHNksdv1+qpC2PgXbpOpflaMPFwJvFBMvMzM83uFS4FFJe4T7hwLXSHq6JrHfQ+XYwzF42uO78cQBGwNfwwc394dB21hglEop0mMmVf9qRdYlPl1S1aPSfx2Fn7p4Ft8J+BxwBLAPXZO1ZNq9mV2F6zMDzz75oLriaLsd0YzBFq2o6DAVXxj7BZ7s5HbgCkkPm2d3/K6kq2oTtkNSbSsFqduk8q4/H1+EfSN8TsfLOVyN63N1rLrM1jtnZST9HcDMBuKxNNPxVNvFmfVT8GMQ3zQvBLsmsJKZPSNpv3qk7ojhwHpm9iLwUbxI6nF4EcgfAX/HnXVtM7tA0u51CdqKFis77+Kdxh2Qjm1S9S91r7uzi5ltGCZlQ+RFqJ8NK4NXm9lYSVcrwngHqVtNqqIcA2a2NLALcIC61z85GO/AkyBV/2pF1iU+XVLVo9J/zaxxamZL4NkBD5T0u9J/En27Lwaf8hMl2+Jlc56W9FL4frBCvI2Z7QasBHy0bluUaaHDVOBJvB7lVXjZnK8FfwM/avd8TeL2iVTbSlNsUnnXfyH8xq/gsk7BwxhuCr9/tLrknbM2mNlFeGzWH/EECDMk7WVmR+MFU+8FbgAuxGspRBkoCWBey2UR4EHgLuBx4Fx8FeQqSX8NncZESV+sT9LOaIJtUtOhsho1EviipKNL3x+FDxCiTjBTxbze2X74IO31cO8a4D+Stq5VuP+C1PyrJ7Iu8ZG6HuZZ8/Yl0XZfDD6LftnMhgCfBKZI+kt45iT8uPn9RGgLqyRuCfd2wk/3HKmu0icTgP/F61TWfmS2r6TUVppkk/KYpXRvR2B1EtAl75xVKK0ejDezI/HMgL+SdIt5/NYKeFDhM5KmmR/1GlynzO0orR7sb91T6k/EV3IuKlbbgKOAEa0aZyw0wTap6lDu5CRNMbOFzNPRjg9+NRaP10qN5fFjTK+HAc51eM2a3QDK7SYFUvWvVmRd4tOlKXoAy5Fwuy/e0WFitjCeUn8+fCJ2rpkdj6dCP4VIbdFmnLEcvshXDJz3AL4MjJM0NebxSZUU20qTbFKdmAWWJxVdFEFWktg+VLK+hHtL4ccAx9CV5Wkl4Glgm7pl7kGXajaeefHsjWuX7h2E76ItXtJ1ybplf59ss2XdMjfJv8r+hNcLuhmf6F/dTj88Li1KfwryXYJnzroSX7Ao7g9MSY92v3+4l4R/ZV3i16VBejSi3eMJTsYBnwIMWAI4OyVblHQ5Hj92thReV2sqXRkOB7SyT8yfJrSVJtkkJV3yzlkL1Hrm/HF8ZaoIHF4RX/U4VdKV5rXFtsQrrF/Rj+L2iIK3lfgIMEzS3QBhRWcMnhBhoJkdgqdKf9zM3pE0tl8F7oUObTMarydypqTr+lXADkjZv6Ru57knmNlKeGf2YOmZIgB/aTxr1YFE6E8lPXY0L077pqRniu8lzQjPRa1HlZT9q0rWJT5dUtejae1e0nN4UiZg5lHtBUjAFlUkHWNmF+DlD+YENpb0iHmNSoVnZpjZ3LhtpsemQ5nU2wo0yyYp6TKgjv9poswPDA2N6dN4zNbNwK3mCRGux7O+7Wtmk2qUs0ck3Qc8b2Z3mmey2Qb4OjANrwvxcWBbSZsBg81s07b/WDyUbbM6bpu78KyOqZCMfynEOoS/P1JMzMxsYpgYY2ar4P60GpH6U9BjQPj7w8UAzcyOT0mPDknGvzog6xIfyegxG7T7+UjEFmVKNtld0l7AXmHgPG+YTMvMFijpsAmR6dAhybSVJtkkOV3ez224pn/w4w/X4ee698Eb2c54scE9S8/dDCxTt7wt5C8fSdsKd765w/WReHrXZcP1ULwmzPp1yz0LtvkikWxNzw7+hRenPAlPNDMPfrSm8KdlKv60Qd3yNl2PpvlX1iUNXVLVo4ntPmFblMcocwLrAA/gO4HDgg7nAnvEqkPT7NMkm6SkS+0/VgofSueG8dT0i4W/fwKvYbFT6ftxeE2ID9Utd2+6lO6Nx1OJfiRcDwW2A07FU6bXLncfbLNo3TK9Dzok5V+hU9sKmKsXfzqdSgxkTJ+m6NE0/8q6xK1L6no0qd3Pgi1uj8kWJdk+FOS7Edi7osOOKejwPtknmrbSJJukoEuOOesAlVLWqquGhQGnAbdImhTufQzPBnOppHeK/6Y+yd+LWp+BXgH4nqQnzGwYvpqwLvCwpDf7VcA+0so2qZG6f0l6DU8yU9R2aeVPGwCTJcnM9sYHPAtKOrYuuas0RY8qqftXmaxLfLqkrkeT2n0fbTEamBRsMSc+8XyrNuFLBJluAH4r6dlwJK3Q4RKIX4dWpNxWmmSTFHTJk7MOadEwhuA1Rb4BYB7rtCGwMDCpzX8TKzOAvczsD3iR6qF4utGzoXW9iJiIWbZOaYp/yYNpq/40DE8hfLmZ3QS8hq8IbmhmZ0nat0aRW9IUPQqa4l+QdYlRlwbpkXy779AWn8OPcp1gZlsD6+OldF6SNKFfBW6DvP7c6+FyKAnq0IqU20qTbBK7LrkI9X+BmV2GG/UJvAN/GThf0uO1CjYLmNmZwAjgYbwS/ORwP+qJWZNJ2b9K/vQYcKWk35vZHcDLkrYLz6yCx3aMVyy1RSo0RY9WpOxfVbIu8ZGyHk1r9xVbLAC8CByHH9v6OnAA/u4/E5+IfrMeSdvTBB3akWpbaZJNYtMlT85mgfKExcwOxIOIrwX+rq6izklgpaJ7ZjafpH+WvssTsxpI2b/a+ZOZnYfHL44rPbsrsCpwuKR3axG4DU3RoxUp+1eVrEt8pKxH09p9C1vMC1wj6WEz2w1P4b6epMfCM1/CSwucW5vQFZqgQztSbStNskmsuuTJ2SxiMVUS/y/Jk7D4SNm/qv5kZsOBE4EjJb0Q7q2D1+bZSdKdZjYvHhz9WC1Ct6AperQiZf+qknWJj5T1aFq7b2ULMxuDJzjZU9JDpfvXApcpxD7FQh91uB6PE7qkn8WcJVJtK02ySYy65JizWSTFxtSOPDGLj5T9q4U/LYJnPisGNp/BUwnvAjwYVqvGAa+b2WuSduhXgdvQFD1akbJ/Vcm6xEfKejSt3bexxTx4gpPyoPM24I3YJmbQJx1uB56XdIl5AodN8AyJV/aTqH0m1bbSJJvEqEuenGUymQ8USQ+Z2VNm9kvgPjz72c54jZcTgWeBiZJuMLPJZraZpBvqk7g1TdEjk8l0TkPb/XLAp81sEDASr+n2rqSxkMxuTlWHs/GYwPHmGTU/CSwLvG1mO0vaukZZZxeaZJNadcnHGjOZzAdG5Tz3rniw7evhz5OB54DrFAKfw7Ga8yRdW5PILWmKHplMpnOa3O7N7CfAMsCTeAzNAeF+ChMzoJsOTwGvSPqKmR2ED6xvlXRdeO46YEKx+5n54GiSTerUJe+cZTKZDwxJKl72kn5a3DezNfDA2/NLA5svA3PEOLBpih6ZTKZzmtjuS/rsZmbL4rsBr5W/q1nEXmmhwyuSXjGz9fDB9LXAneHZ9YEVgej1Spkm2SQGXfLkLJPJfKC0edlvhdfSewDAzPYBVgJODdcDJc3oPyl7pyl6ZDKZzmlau1f3QshPF/fDvSgHy1Xa6QDsgO9m/krSu2a2KrAn8A1JL9Yi7GxCk2wSgy55cpbJZOrgFWCdEFR7Il7b5Rrgt+DFYGuUrS80RY9MJtM5Sbf74qhmb/dipiqvmS2ExwYdI+nNkG1vb+AB4PYaRJztaJJN6tYlx5xlMplaMLOL8KMA8wOHAFMlvVWvVH2nKXpkMpnOye0+PszsR8Ao4GpgD+Ai4EZJT9Uq2GxMk2zSn7rkyVkmk+lXrHuh18GS3q5bplmhKXpkMpnOye0+PiqJWw4HBgG/Ae5M5ahm02iSTerQJU/OMplMv1Pu7Fpdp0JT9MhkMp2T2318tEpmku1SL02ySX/rkidnmUwmk8lkMplMJhMBA+oWIJPJZDKZTCaTyWQyeXKWyWQymUwmk8lkMlGQJ2eZTCaTyWQymUwmEwF5cpbJZDKZTCaTyWQyEZAnZ5lMJpPJZDKZTCYTAXlylslkMplMJpPJZDIRkCdnmUwmk8lkMplMJhMBeXKWyWQymUwmk8lkMhHw/wCMof5Z0HE+AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (15,10))\n",
    "plt.xticks(rotation = -45)\n",
    "plt.hist(male_value['Q9'], bins = 18, alpha = 0.3, color = 'green', edgecolor = 'black', label = 'Male')\n",
    "plt.hist(female_value['Q9'], bins = 18, alpha = 0.3, color = 'grey', edgecolor = 'black', label = 'Female')\n",
    "plt.legend(loc = 'upper right')\n",
    "plt.scatter(median_income_female, 20, color = 'red', label = 'Female')\n",
    "plt.scatter(median_income_male, 20, color = 'yellow', label = 'Male')\n",
    "plt.legend(loc = 'center right')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# draw the histogram of test statistic and draw red dot to show the difference of the median incomes between female and male employees "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Median Salary differences of Males and females is 5252\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "values = {'0-10,000': 5000, '10-20,000': 15000, '20-30,000': 25000, '30-40,000': 35000,'40-50,000': 45000, '50-60,000': 55000, '60-70,000': 65000, '70-80,000': 75000,'80-90,000': 85000, '90-100,000': 95000, '100-125,000': 112500,\n",
    "       '125-150,000': 137500, '150-200,000': 175000, '200-250,000': 225000,\n",
    "       '250-300,000': 275000, '300-400,000': 350000, '400-500,000': 450000,\n",
    "       '500,000+':500000,'500,000':500000}\n",
    "\n",
    "# Average calculation for approximation Salaries\n",
    "subset_income['salary'] = subset_income['Q9'].apply(lambda value: values[value]) \n",
    "\n",
    "arrays = []\n",
    "for i in range(500):\n",
    "    \n",
    "    # Median for male \n",
    "    mi = subset_income[subset_income['Q1']=='Male'].index \n",
    "    ms = np.random.choice(mi,250,replace=False)\n",
    "    fmale = subset_income.loc[ms]\n",
    "    male_data = fmale['salary'].median() \n",
    "    \n",
    "    # median for female\n",
    "    fi = subset_income[subset_income['Q1'] == 'Female'].index\n",
    "    fs = np.random.choice(fi,250,replace=False)\n",
    "    ffemale=subset_income.loc[fs]\n",
    "    female_data=ffemale['salary'].median() \n",
    "    \n",
    "    # append to array by subtract the median between male and female\n",
    "    arrays.append(male_data - female_data)\n",
    "\n",
    "mf = subset_income.groupby('Q1')\n",
    "mm = mf.get_group('Male')['salary'].median()\n",
    "fm = mf.get_group('Female')['salary'].median()\n",
    "\n",
    "# the difference of the median incomes between female and male employees\n",
    "median_diff = male_median - female_median \n",
    "\n",
    "plt.figure(figsize = (15,10))\n",
    "# histogram for 500 samples of Median salries of Male and Female \n",
    "plt.hist(arrays, bins = 20, alpha = 0.5, color = 'yellowgreen', edgecolor = 'black', linewidth = 1.2, label = 'Median Salary Differences') \n",
    "\n",
    "# plot dot for median difference of male and female\n",
    "plt.scatter(Median_diff_Male_Female, 20, color = 'red', label = 'Median') \n",
    "plt.legend()\n",
    "print(f\"The Median Salary differences of Males and females is {median_diff}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# use bootstrap to procedure at leat 5000 samples and draw histogram of the test statistic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Mean of original data is between 2659.63574463636 and 9914.653379224137\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA2cAAAI/CAYAAADz4aFLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3de5xddX3/+/eXZJJAJirBILf2R/CAgiAXA95QQLSl/SkiSEGkRqWCP1vQo6J4qUbpo8cLUrVyVIQKKkQU5SJVK3LRB9IjRAjIRUFoVAqRFBVnQibsmazzx2zGxCRkZpjJ/s7M8/l4zGPPXnut2Z/wDSQv1t5rl6ZpAgAAQGdt0ekBAAAAEGcAAABVEGcAAAAVEGcAAAAVEGcAAAAVEGcAAAAVmL45n+ypT31qs/POO2/OpwQAAKjGT37yk/9pmmbehh7brHG28847Z8mSJZvzKQEAAKpRSvnlxh7zskYAAIAKiDMAAIAKiDMAAIAKbNb3nAEAwGTRarVy3333pa+vr9OjUKFZs2Zlp512SldX17CPEWcAADAK9913X+bMmZOdd945pZROj0NFmqbJQw89lPvuuy/z588f9nFe1ggAAKPQ19eXbbbZRpixnlJKttlmmxGfVRVnAAAwSsKMjRnN7w1xBgAAE9gll1ySUkp+9rOfdWyG+++/P69+9avH5GddeumlueOOO0Z0zHnnnZd58+Zl3333za677pq//Mu/zPXXXz8uzzWexBkAAIyBUsb2a7gWL16cAw88MF/96lfH7NfS398/ov132GGHXHzxxWPy3KMNpmOOOSY333xz7r777px22mk58sgjc+edd47Lc40XcQYAABNUb29vfvSjH+Xcc89dJ86uvfbavPjFL86rXvWq7LHHHnnzm9+cNWvWJEm6u7vzjne8I/vtt18OPfTQrFixIkly8MEH573vfW8OOuigfOpTn8pVV12VfffdN3vttVfe+MY3ZvXq1bnxxhvz7Gc/O319fVm5cmWe9axn5bbbbsuyZcuy5557Jhk8i3XEEUfkFa94RebPn5/PfOYzOfPMM7Pvvvvmec97Xn77298mSb7whS9k//33z957752jjjoqjzzySK6//vpcfvnlOfXUU7PPPvvknnvuyT333JPDDjssz3nOc/KiF71oWGcIDznkkJx44ok5++yzR/RcG9pvcxJnAAAwQV166aU57LDDsttuu2Xu3Lm56aabhh674YYb8olPfCI//elPc8899+Sb3/xmkmTlypXZb7/9ctNNN+Wggw7Khz70oaFjfv/73+cHP/hB/v7v/z6vf/3rc9FFF+WnP/1p+vv789nPfjb7779/Dj/88Lz//e/Pu971rhx//PFDUba22267LRdeeGFuuOGGvO9978tWW22Vm2++Oc9//vPzpS99KUly5JFH5sYbb8wtt9yS3XffPeeee25e8IIX5PDDD8/HP/7xLF26NE9/+tNz4okn5l//9V/zk5/8JGeccUbe8pa3DOufzX777TcUcsN9rg3ttzmJMwAAmKAWL16cY489Nkly7LHHZvHixUOPHXDAAdlll10ybdq0vOY1r8l1112XJNliiy1yzDHHJEmOP/74oe1Jhrb//Oc/z/z587PbbrslSRYuXJgf/vCHSZIPfOADufLKK7NkyZK8613v2uBchxxySObMmZN58+blyU9+cl7xilckSfbaa68sW7YsyWDAvehFL8pee+2VCy64ILfffvt6P6e3tzfXX399jj766Oyzzz456aST8sADDwzrn03TNEPfD+e5RrLfePE5ZwAAMAE99NBDufrqq3PbbbellJKBgYGUUvKxj30syfpXC9zY1QPX3j579uwk64bNn/rtb3+b3t7etFqt9PX1DR2ztpkzZw59v8UWWwzd32KLLYbez/b6178+l156afbee++cd955ufbaa9f7OWvWrMlTnvKULF26dKPzbMzNN9+c3XfffdjPNZL9xoszZwAAMAFdfPHFed3rXpdf/vKXWbZsWX79619n/vz5Q2fCbrjhhvzXf/1X1qxZk4suuigHHnhgksHgeeziHRdeeOHQ9rU985nPzLJly/KLX/wiSfLlL385Bx10UJLkxBNPzOmnn57Xvva1efe73z3q+Xt6erL99tun1WrlggsuGNo+Z86c9PT0JEme9KQnZf78+fn617+eZDAab7nllk3+7B/84Ac5++yz86Y3vWnYz/V4+20u4gwAACagxYsX51WvetU624466qhceOGFSZLnP//5Oe2007Lnnntm/vz5Q/vOnj07t99+e57znOfk6quvzgc+8IH1fvasWbPyxS9+MUcffXT22muvbLHFFnnzm9+cL33pS5k+fXqOO+64nHbaabnxxhtz9dVXj2r+008/Pc997nPzspe9LM985jOHth977LH5+Mc/nn333Tf33HNPLrjggpx77rnZe++986xnPSuXXXbZBn/eRRddlH322Se77bZb/vmf/znf+MY3hs6cDfe5Nrbf5lIe75TlWFuwYEGzZMmSzfZ8AAAwXu68886hv/wnI7v8/XA8kb+mX3vttTnjjDNyxRVXrPdYd3d3ent7n8BkDNef/h5JklLKT5qmWbCh/b3nDAAAxsBmPOfBJCXOAABgkjn44INz8MEHb/AxZ83q5T1nAAAAFRBnAAAAFRBnAACwufT3Jw8/nAwMdHoSKiTOAABgPK1enXzlK8leeyUzZiTbbpt0dQ3e/8pXBh+HiDMAABg/N9yQ7LBD8n/+T3LbbYOXdHz00cHb224b3L7DDsmNN476KS655JKUUvKzn/1sDAdf3+rVq/PSl740++yzTy666KJ1HmuaJv/0T/+UXXfdNbvttlsOOeSQ3H777Rv9WX/3d3+XO+6443Gf73Of+1y+9KUvjWrWZcuWZc8999zg9i233DL77rtvdt999xxwwAE5//zzN/nzli5dmm9/+9ujmmUkXK0RADqsr68vrVar02NsUFdXV2bNmtXpMWBiuvHG5CUvSVau3Pg+j1058ZBDkmuuSfbff8RPs3jx4hx44IH56le/mkWLFo1u1mG4+eab02q1snTp0vUeO+uss3L99dfnlltuyVZbbZXvfe97Ofzww3P77bev99+QgYGBnHPOOZt8vje/+c1jNvvanv70p+fmm29Oktx777058sgjs2bNmrzhDW/Y6DFLly7NkiVL8td//dfjMtNjxBkAdFBfX18+feaiPNK7vNOjbNBW3dvllLcvEmgwUqtXJ4cd9vhhtraVKwf3v//+ZObMYT9Nb29vfvSjH+Waa67J4YcfnkWLFuU73/lOvvjFL+ZrX/taksEPpP7EJz6Rb33rWzn33HPz0Y9+NDvssEN23XXXzJw5M5/5zGfW+Zm//e1v88Y3vjH33ntvttpqq5x99tnZbrvtcvzxx2fFihXZZ5998o1vfCNPf/rTh4756Ec/mmuvvTZbbbVVkuQv/uIv8oIXvCAXXHBBTjjhhHR3d+ftb397/uM//iOf+MQn8v73vz9nnHFGFixYsNGZFi1alO7u7rzzne/MwQcfnOc+97m55ppr8vvf/z7nnntuXvSiF2XZsmX527/926xs/3P+zGc+kxe84AXD/ue3yy675Mwzz8w73vGOvOENb8gNN9yQt73tbVm1alW23HLLfPGLX8z8+fPzgQ98IKtWrcp1112X97znPZk/f/56+z3jGc8Y9vNujDgDgA5qtVp5pHd5Tjpum3TPntHpcdbRu/LRfP7C5Wm1WuIMRurrXx98+eJIPPpocvHFyWtfO+xDLr300hx22GHZbbfdMnfu3Nx000152ctelpNOOikrV67M7Nmzc9FFF+WYY47J/fffn9NPPz033XRT5syZk5e85CXZe++91/uZH/zgB7Pvvvvm0ksvzdVXX53Xve51Wbp0ac4555ycccYZueKKK9bZ/w9/+ENWrly5TqwlyYIFC4Ze2rhy5crsueee+fCHP7zOPsOdKUn6+/tzww035Nvf/nY+9KEP5fvf/3623XbbXHnllZk1a1buvvvuvOY1r8mSJUuG/c8vSfbbb7+hl4Q+85nPzA9/+MNMnz493//+9/Pe97433/jGN/LhD384S5YsGQrZP/zhDxvc74kSZwBQge7ZMzKne/j/txyo3Ec/+seXLA5Xb2/ykY+MKM4WL16ct73tbUmSY489NosXL85+++2Xww47LN/61rfy6le/Ov/+7/+ej33sY7nqqqty0EEHZe7cuUmSo48+Onfdddd6P/O6664bCo2XvOQleeihh/Lwww+P7NeSwfehlVKSJNOmTctRRx213j433HDDsGZKkiOPPDJJ8pznPCfLli1LMvg/uP7hH/4hS5cuzbRp0zZ67KbmfMzDDz+chQsX5u67704pZaMvOR/ufiMlzgAAYCwNDCSPczGMx3X77YPHT5u2yV0feuihXH311bnttttSSsnAwEBKKfnYxz6WY445JmeddVbmzp2b/fffP3PmzFknQh7PhvZ7LLI25ElPelJmz56de++9N7vsssvQ9ptuuikHHXRQkmTWrFmZtoFf03BnSpKZ7Zd7Tps2Lf39/UmSf/mXf8nTnva03HLLLVmzZs2ozvLffPPN2X333ZMk//iP/5hDDjkkl1xySZYtW5aDDz54g8cMd7+RcrVGAAAYS729g5fKH43p04d9xu3iiy/O6173uvzyl7/MsmXL8utf/zrz58/Pddddl4MPPjg33XRTvvCFL+SYY45JkhxwwAH5wQ9+kN/97nfp7+/f6MvwXvziF+eCCy5IMvh+tac+9al5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gYFOjwEA0BHiDKagvr6+fPrMRXmkd3mnR1nH6tWt3HXXrenv3y7JzE6PAwCwWYkzmIJarVYe6V2ek47bJt2zZ3R6nCHLH+zNqR9clYE1zp4BAFOPOIMprHv2jMzprucMVU/v6k6PAADQMS4IAgAAUAFxBgAAUIFNxlkp5c9KKdeUUu4spdxeSnlre/vcUsqVpZS727dbj/+4AAAAk9Nwzpz1J3lH0zS7J3lekr8vpeyR5LQkVzVNs2uSq9r3AQAAGIVNxlnTNA80TXNT+/ueJHcm2THJK5Oc397t/CRHjNeQAAAAk92I3nNWStk5yb4zrD0AAA/6SURBVL5JfpzkaU3TPJAMBlySbcd6OAAAgKli2HFWSulO8o0kb2ua5g8jOO7EUsqSUsqSFStWjGZGAACASW9YcVZK6cpgmF3QNM0325t/U0rZvv349kke3NCxTdOc3TTNgqZpFsybN28sZgYAAJh0hnO1xpLk3CR3Nk1z5loPXZ5kYfv7hUkuG/vxAAAApobpw9jnhUn+NslPSylL29vem+QjSb5WSjkhya+SHD0+IwIAAEx+m4yzpmmuS1I28vChYzsOAADA1DSiqzUCAAAwPsQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABaZ3egAAAKam/v6B9PT0dHqM9XR1dWXWrFmdHoMpSJwBALDZ9a3uzy23Ls1Znzw1XdO7Oj3OOrbq3i6nvH2RQGOzE2cAAGx2rdZApmVV3nTs3GyzdXenxxnSu/LRfP7C5Wm1WuKMzU6cAQDQMd2zuzKne2anx4AquCAIAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABcQZAABABTYZZ6WUfyulPFhKuW2tbXNLKVeWUu5u3249vmMCAABMbsM5c3ZeksP+ZNtpSa5qmmbXJFe17wMAADBKm4yzpml+mOS3f7L5lUnOb39/fpIjxnguAACAKWW07zl7WtM0DyRJ+3bbsRsJAABg6hn3C4KUUk4spSwppSxZsWLFeD8dAADAhDTaOPtNKWX7JGnfPrixHZumObtpmgVN0yyYN2/eKJ8OAABgchttnF2eZGH7+4VJLhubcQAAAKam4VxKf3GS/0zyjFLKfaWUE5J8JMnLSil3J3lZ+z4AAACjNH1TOzRN85qNPHToGM8CAAAwZY37BUEAAADYNHEGAABQAXEGAABQgU2+5wx4Yvr6+tJqtTo9xjp6enoyMDDQ6TEAoEr9/QPp6enp9Bjr6erqyqxZszo9BuNInME46uvry6fPXJRHepd3epR1rF7dyl133Zr+/u2SzOz0OABQjb7V/bnl1qU565Onpmt6V6fHWcdW3dvllLcvEmiTmDiDcdRqtfJI7/KcdNw26Z49o9PjDFn+YG9O/eCqDKxx9gwA1tZqDWRaVuVNx87NNlt3d3qcIb0rH83nL1yeVqslziYxcQabQffsGZnTXc8Zqp7e1Z0eAQCq1j27q6o/u5kaXBAEAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAuIMAACgAtM7PQCMlb6+vrRarU6PsY6enp4MDAx0egwAYBLo7x9IT09Pp8dYz8DAQKZNm9bpMdbT1dWVWbNmdXqMERFnTAp9fX359JmL8kjv8k6Pso7Vq1u5665b09+/XZKZnR4HmEzWrElajyYzZiTFC2Fgsutb3Z9bbl2asz55arqmd3V6nCH9/QO5486786w9dq0u0Lbq3i6nvH3RhAo0ccak0Gq18kjv8px03Dbpnj2j0+MMWf5gb0794KoMrHH2DBgDA/3JHXck112XrFiRbLHFYKTN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\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "arrays = []\n",
    "# generate 5000 resamples randomly from Dataset without replacement\n",
    "sample_data = subset_income.sample(5000,replace = False) \n",
    "sample_data = sample_data[['Q1','salary']]\n",
    "\n",
    "for temp in range(500):\n",
    "    # random samples of 5000 with replacment\n",
    "    bootstrap_sample = sample_data.sample(5000,replace = True) \n",
    "    bootstrap_sample_groupby = bootstrap_sample.groupby('Q1')\n",
    "    \n",
    "    # average male and female income\n",
    "    bootstrap_male_mean = bootstrap_sample_groupby.get_group('Male')['salary'].mean() \n",
    "    bootstrap_female_mean = bootstrap_sample_groupby.get_group('Female')['salary'].mean()\n",
    "    \n",
    "    # append to array by subtract average income \n",
    "    arrays.append(bootstrap_male_mean - bootstrap_female_mean)\n",
    "\n",
    "# create bootstrap dataset from array \n",
    "bootstrap_df = pd.DataFrame(arrays,columns = ['Bootstrap_values']) \n",
    "\n",
    "# 5 % data in normal distribution\n",
    "firstextreme = bootstrap_df.Bootstrap_values.quantile(0.050) \n",
    "\n",
    "#95 % of data in normal distribution\n",
    "lastextreme = bootstrap_df.Bootstrap_values.quantile(0.950) \n",
    "\n",
    "print(f\"The Mean of original data is between {firstextreme} and {lastextreme}\")\n",
    "\n",
    "male_avg = mf.get_group('Male')['salary'].mean() # Male average of original population\n",
    "female_avg = mf.get_group('Female')['salary'].mean() #Female average of original population\n",
    "\n",
    "# difference of average income\n",
    "avg_diff = male_avg - female_avg \n",
    "\n",
    "plt.figure(figsize = (15,10))\n",
    "# histogram for Bootstarp samples\n",
    "plt.hist(arrays, bins = 20, alpha = 0.5, color = 'gold', edgecolor = 'black', linewidth = 1.2) \n",
    "\n",
    "# line that shows the approxiamte data around the mean\n",
    "plt.hlines((0,0), firstextreme, lastextreme, colors = 'blue', linestyles = 'solid', linewidth = 8, label = 'Approximate Data') \n",
    "\n",
    "# plot Dot of original mean\n",
    "plt.scatter(avg_diff, 5, color = 'red', s = 200,label  ='Avg of Original Data') \n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P value is 0.42542542542542544\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "i_md = []\n",
    "p = subset_income[['Q1','salary']]\n",
    "\n",
    "for i in range(1000):\n",
    "  i_d = p.sample(len(p),replace = False)['Q1'].reset_index()['Q1']\n",
    "  data = {'Q1data':i_d}\n",
    "  now = pd.DataFrame(data)\n",
    "  a1 = p['Q1'].reset_index()['Q1']\n",
    "  a2 = p['salary'].reset_index()['salary']\n",
    "  now['salary']=a2\n",
    "  now['now_gender']=a1\n",
    "  i_g = now.groupby('Q1data')\n",
    "  i_m = i_g.get_group('Male')['salary'].median() #Male Median value for shuffles data\n",
    "  i_f = i_g.get_group('Female')['salary'].median()\n",
    "  i_md.append(i_m - i_f) #Difference of Male and Female resampled median\n",
    "\n",
    "mf = subset_income.groupby('Q1')\n",
    "mm = mf.get_group('Male')['salary'].median() #Male median of original data\n",
    "fm = mf.get_group('Female')['salary'].mean() \n",
    "mfmd = mm - fm #Difference of male median and female median\n",
    "\n",
    "plt.figure(figsize = (15,10))\n",
    "plt.hist(i_md, bins = 20, color = 'green', edgecolor = 'black', linewidth = 1.2)\n",
    "\n",
    "i_md = np.array(i_md)\n",
    "P1 = np.count_nonzero(i_md <= mfmd) / i #Storing P value\n",
    "print(f\"P value is {P1}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
